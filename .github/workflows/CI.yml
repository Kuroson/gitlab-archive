name: Continuous Integration

on:
  push:

jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Build
        run: yarn build
      - name: eslint
        run: yarn lint
      - name: prettier
        run: yarn prettier
  versioning:
    runs-on: ubuntu-latest
    needs: [CI]
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      GITHUB_NAME: "GitHub Actions"
      GITHUB_EMAIL: "actions@github.com"
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure Identity
        run: |
          git config --global user.name $GITHUB_NAME
          git config --global user.email $GITHUB_EMAIL
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: changeset version
        run: yarn changeset version
      - name: changeset tag
        run: yarn changeset tag
      - name: Update repo
        run: git push --follow-tags
  CD:
    runs-on: ubuntu-latest
    needs: [CI, versioning]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          push: true
          tags: kuroson/archive:latest
